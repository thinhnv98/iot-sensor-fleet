name: Docker Publish

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for sensor-producer
        id: meta-producer
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/sensor-producer
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=sha,format=short
            latest

      - name: Extract metadata (tags, labels) for anomaly-detector
        id: meta-detector
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/anomaly-detector
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=sha,format=short
            latest

      - name: Build and push sensor-producer image
        uses: docker/build-push-action@v4
        with:
          context: .
          target: sensor-producer
          push: true
          tags: ${{ steps.meta-producer.outputs.tags }}
          labels: ${{ steps.meta-producer.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push anomaly-detector image
        uses: docker/build-push-action@v4
        with:
          context: .
          target: anomaly-detector
          push: true
          tags: ${{ steps.meta-detector.outputs.tags }}
          labels: ${{ steps.meta-detector.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max